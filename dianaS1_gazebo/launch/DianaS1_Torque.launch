<?xml version="1.0"?>
<launch>
  <arg name="limited" default="false"  doc="If true, limits joint range." />
  <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />

  <!-- Load controller setting -->
  <rosparam file="$(find dianaS1_gazebo)/controller/torque_controller_DianaS1.yaml" command="load"/>
  
  <!-- Start Gazebo and load the empty world if requested to do so -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <include file="$(find dianaS1_description)/launch/DianaS1_upload_torque.launch">
    <arg name="limited" value="$(arg limited)"/>    
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" 
    args="-urdf -param robot_description -model robot -z 0.1" respawn="false" output="screen" />

    <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="1000.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>

  <!-- Fake Calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
        args="pub /calibrated std_msgs/Bool true" />
  
  <!-- joint_state_controller -->
  <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller" respawn="false" output="screen"/>


  <!-- load other controllers -->
  <node name="ros_control_torque_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_group_eff_controller" />

</launch>
